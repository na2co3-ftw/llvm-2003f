//===-- F2003fSubtarget.h - Define Subtarget for the 2003f -----*- C++ -*--===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the 2003f specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_F2003F_F2003FSUBTARGET_H
#define LLVM_LIB_TARGET_F2003F_F2003FSUBTARGET_H

#include "F2003fFrameLowering.h"
#include "F2003fISelLowering.h"
#include "F2003fInstrInfo.h"
#include "F2003fRegisterInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetSubtargetInfo.h"
#include <string>


#define GET_SUBTARGETINFO_HEADER
#include "F2003fGenSubtargetInfo.inc"

namespace llvm {
class F2003fSubtarget : public F2003fGenSubtargetInfo {
private:
  F2003fFrameLowering FrameLowering;
  F2003fInstrInfo InstrInfo;
  F2003fTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;
  virtual void anchor();

public:
  /// This constructor initializes the data members to match that
  /// of the specified triple.
  ///
  F2003fSubtarget(const Triple &TT, const std::string &CPU,
                  const std::string &FS, const TargetMachine &TM);

  F2003fSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const F2003fInstrInfo *getInstrInfo() const override {
    return &InstrInfo;
  }
  const F2003fRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
  const F2003fTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
};
}

#endif
